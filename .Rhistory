apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data("mtcars")
?mtcars
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
blah <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(blah[3]-blah[1])
blah[3]-blah[1]
diff(blah[3], blah[1])
diff(15.10000, 26.66364)
26.66364 - 15.1
abs(26.66364 - 15.1)
debug(ls)
ls
debug(ls)
ls()
library("swirl")
swirl()
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3, 07))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 07))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
replicate(100, rpois(5, 10)) -> my_pois
my_pois
colMeans(my_pois) -> cm
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed, cars$dist)
plot(cars$dist, cars$speed)
plot(cars$speed, cars$dist, xlab = "Speed")
plot(cars$speed, cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars$speed, cars$dist, ylab = "Stopping Distance")
plot(cars$speed, cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars$speed, cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
e
x
y
plot(y)
plot(x, y)
summaryRprof()
summaryRprof(lm)
summaryRprof("blah.R")
Rprof("blah.R")
Rprof(NULL)
summaryRprof("blah.R")
library(xlsx)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "./excel.xlsx", method = "curl")
blah = read.xlsx("./excel.xlsx", sheetIndex = 1, header = TRUE)
View(blah)
blah = read.xlsx("./excel.xlsx", sheetIndex = 1, header = TRUE, colIndex = 7:15, rowIndex = 18:23)
sum(blah$Zip*blah$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "./restaurants.xml", method = "curl")
install.packages("XML")
library(XML)
fileurl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
fileurl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xm
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileurl, useInternalNodes = TRUE)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternalNodes = TRUE)
doc <- xmlTreeParse(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml, useInternalNodes = TRUE)
doc <- xmlTreeParse("./restaurants.xml", useInternalNodes = TRUE)
xmlRoot(doc)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
xmlSapply(rootNode, "zipcode")
xmlSApply(rootNode, "zipcode")
xmlSApply(rootNode, xmlValue("zipcode"))
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode[["zipcode"]], xmlValue)
xmlSApply(rootNode[[1]][["zipcode"]], xmlValue)
rootNode[[1]][[2]]
rootNode[[1]][[1]][[2]]
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
zips
table(zips)
table(zips) -> zipstable
zipstable$21231
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "./pid.csv", method = "curl")
fread("./pid.csv")
library(data.table)
foo <- fread("./pid.csv")
View(foo)
DT <- foo
system.time()
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a
a
a
system.time(a)
b <- DT[,mean(pwgtp15),by=SEX]
system.time(b)
system.time(12342432*32432.324/5646645)
system.time(b)
system.time(replicate(100, sqrt(seq(1.0, 1.0e6))))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
rm(b)
rm(blah)
rm(foo)
rm(a)
rm(doc)
rm(fileurl)
rm(rootNode)
rm(zips)
rm(zipstable)
a <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a <- {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}
a
a <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a <- system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
a <- system.time(mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15))
a
b <- system.time(DT[,mean(pwgtp15),by=SEX])
b
c <- system.time(mean(DT$pwgtp15,by=DT$SEX))
d <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
e <- system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
e <- system.time(rowMeans(DT)[DT$SEX==1], rowMeans(DT)[DT$SEX==2])
e <- system.time(rowMeans(DT[DT$SEX==1]), rowMeans(DT[DT$SEX==2])
e <- system.time(rowMeans(DT[DT$SEX==1]), rowMeans(DT[DT$SEX==2]))
e <- system.time(rowMeans(DT[DT$SEX==1]), rowMeans(DT[DT$SEX==2]))
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT[DT$SEX==1]); rowMeans(DT[DT$SEX==2])
f <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
a
a[1]
plot(a[1], b[1], c[1], d[1], f[1])
c
f
library(httr)
require(httpuv)
require(jsonlite)
download.packages("httpuv")
install.packages("httpuv")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
list(output$name, output$created_at)
list(output[[2]]$name, output[[2]]$created_at)
list(output[[1]]$name, output[[1]]$created_at)
list(output[[5]]$name, output[[5]]$created_at)
list(output[[]]$name, output[[]]$created_at)
table(output$name, output$created_at)
list(output$name, output$created_at)
list(output[[6]]$name, output[[6]]$created_at)
list(output[[7]]$name, output[[7]]$created_at)
list(output[[8]]$name, output[[8]]$created_at)
list(output[[11]]$name, output[[11]]$created_at)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "./pid.csv", method ="curl")
read.csv("pid.csv")
read.csv("pid.csv") -> acs
View(acs)
sqldf("select pwgtp1 from acs")
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf(select pwgtp1 from acs)
sqldf(select * from acs where AGEP < 50 and pwgtp1)
select * from acs where AGEP < 50 and pwgtp1
select pwgtp1 from acs where AGEP < 50
install.packages("sqldf")
sqldf("select pwgtp1 from acs")
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
library(sqldf)
sqldf("select pwgtp1 from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
View(acs)
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
head(sqldf("select * from acs where AGEP < 50 and pwgtp1"))
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct pwgtp1 from acs")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
sqldf("select AGEP where unique from acs")
require(XML)
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
lines
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
library(swirl)
swirl()
1
swirl()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
install.packages("lattic")
install.packages("lattice")
install.packages("ggplot2")
install.packages("grid")
swirl()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug (ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
name(pollution)
names(pollution)
table(pollution$region)
table(pollution$region) -> reg
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- pollution$region == "east"
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
west <- subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25, col="green")
plot(pollution)
with(pollution, plot(latitude, pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(west$latitude, west$pm25, main = "East")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income, state, c(4,1))
xyplot(Life.Exp~Income, state, layout=c(4,1))
xyplot(Life.Exp~Income | region, state, layout=c(4,1))
xyplot(Life.Exp~Income | region, state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data="mpg")
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- airquality$Month==5
may <- subset(airquality, Month==5)
points(col="blue", pch=17)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month !=5)
points(notmay$Wind, notmay$Ozone, col="red", pch="snowflake")
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(h=median(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York city", outer=TRUE)
mtext("Ozone and Weather in New York City", outer=TRUE)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", temp, method="curl")
dateDownloaded <- date()
data <- read.table(unz(temp, "hpc"))
temp
data <- read.table(unz(temp, "exdata%2Fdata%2Fhousehold_power_consumption.zip"))
data <- read.table(unz(temp, "household_power_consumption.txt"))
head(data)
data <- read.csv(unz(temp,"household_power_consumption.txt",header=TRUE))
data <- read.csv(unz(temp,"household_power_consumption.txt"))
head(data)
data <- read.table(unz(temp, "household_power_consumption.txt"), sep=";", header=TRUE)
head(data)
unlink(temp)
View(data)
nrow(data$Date==c("01/02/2007","02/02/2007"))
nrow(data$Date=="01/02/2007"|"02/02/2007")
nrow(data$Date=="01/02/2007"|"02/02/2007")
table(data$Date==c("01/02/2007","02/02/2007"))
table(data$Date=="01/02/2007")
table(data$Date)
table(data$Date) -> blah
blah$02/01/2007
blah$02/1/2007
blah$2/1/2007
blah$1/2/2007
blah[1]
blah$1/1/2007
blah$"1/1/2007""
blah$"1/1/2007"
blah$"1/1/2007"
blah$1//1//2007
blah$as.character("1/1/2007")
blah$1\1\2007
blah$1\/1\/2007
blah$1\\/1\\/2007
blah$1///1///2007
blah$1//1//2007
blah$1\1\2007
blah$112007
blah$1-1-2007
blah[["1/1/2007"]]
blah["1/1/2007"]
blah["1/2/2007"]
blah["2/2/2007"]
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
dateDownloaded <- date()
data <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",header=TRUE,skip=grep("01/02/2007",readLines("household_power_consumption.txt")),nrows=2880)
data <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",header=TRUE,skip=grep("01/02/2007",readLines(temp)),nrows=2880)
unzipped <- unz(temp,"household_power_consumption.txt")
data <- read.table(unzipped,sep=";",header=TRUE,skip=grep("01/02/2007",readLines(unzipped)),nrows=2880)
data <- read.table(unzipped,sep=";",header=TRUE,skip=grep("1/2/2007",readLines(unzipped)),nrows=2880)
data <- read.table(unzipped,sep=";",header=TRUE,skip=grep("01/02/2007",readLines(unzipped)),nrows=2880)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
unzipped <- unz(temp,"household_power_consumption.txt")
data <- read.table(unzipped,sep=";",header=TRUE,skip=grep("1/2/2007",readLines(unzipped)),nrows=2880)
data <- read.table(unzipped,sep=";",header=TRUE,skip=grep("01/02/2007",readLines(unzipped)),nrows=2880)
length(unzipped)
unzipped
data <- read.table(unzipped,sep=";",header=TRUE,nrows=10)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
unzipped <- unz(temp,"household_power_consumption.txt")
data <- read.table(unzipped,sep=";",header=TRUE,nrows=80)
grep("1/2/2007",readLines(unzipped)
)
grep("1/2/2007",readLines(unzipped))
grep("1/2/2007",readLines("household_power_consumption.txt"))
grep("1/2/2007",unzipped)
grep(*,unzipped)
grep("*",unzipped)
grep("1/2/2007",readLines(temp))
temp
grep("1/2/2007",readLines("/var/folders/ss/drvrg34d58b2n5prs88n1c2w0000gq/T//Rtmpz626HB/fileccff746cbd/household_power_consumption.txt"))
grep("1/2/2007",readLines(unzipped))
grep("1/2/2007",readLines("unzipped"))
grep("1/2/2007", unzipped)
grep("1/2/2007",unzipped)
data <- read.table(unzipped,sep=";",header=TRUE,skip=66638,nrows=2880)
data <- read.table(unzipped,sep=";",header=TRUE,skip=66638,nrows=2880)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp,method="curl")
data <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",header=TRUE,skip=66638,nrows=2880)
head(data)
data <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",skip=66638,nrows=2880)
head(data)
data <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",skip=66637,nrows=2880)
head(data)
header <- read.table(unz(temp,"household_power_consumption.txt"),sep=";",nrows=1)
colnames(data) <- unlist(header)
head(data)
unlink(temp)
class(data)
class(data[1])
class(data[[1]])
class(data[[2]])
class(data$Date)
class(data$Time)
class(data$Global_intensity)
data <- strptime(data$Time)
data$Time <- strptime(data$Time, format="%H%M%S")
class(data$Time)
head(data)
setwd("/Users/morr/Desktop/Coursera/Course_4-Exploratory_Data_Analysis_with_R/week1/ExData_Plotting1")
source("plot4.R")
